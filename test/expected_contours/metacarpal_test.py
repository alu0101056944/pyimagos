'''
Universidad de La Laguna
Máster en Ingeniería Informática
Trabajo de Final de Máster
Pyimagos development
'''

import pytest

import numpy as np

from src.expected_contours.metacarpal import (
  ExpectedContourMetacarpal
)

class TestMetacarpalExpectedContour:

  @pytest.fixture(scope='class')
  def metacarpal_contour(self):
    yield np.array(
      [[[ 17,  54]],
       [[ 16,  55]],
       [[ 12,  55]],
       [[ 11,  56]],
       [[  9,  56]],
       [[  8,  57]],
       [[  7,  57]],
       [[  6,  58]],
       [[  5,  58]],
       [[  3,  60]],
       [[  3,  61]],
       [[  2,  62]],
       [[  2,  63]],
       [[  3,  64]],
       [[  3,  68]],
       [[  2,  69]],
       [[  2,  72]],
       [[  6,  76]],
       [[  6,  77]],
       [[  9,  80]],
       [[  9,  81]],
       [[ 11,  83]],
       [[ 11,  84]],
       [[ 14,  87]],
       [[ 14,  88]],
       [[ 16,  90]],
       [[ 16,  91]],
       [[ 17,  92]],
       [[ 17,  93]],
       [[ 18,  94]],
       [[ 18,  95]],
       [[ 19,  96]],
       [[ 19,  97]],
       [[ 21,  99]],
       [[ 21, 100]],
       [[ 22, 101]],
       [[ 22, 102]],
       [[ 23, 103]],
       [[ 23, 104]],
       [[ 24, 105]],
       [[ 24, 106]],
       [[ 25, 107]],
       [[ 25, 108]],
       [[ 26, 109]],
       [[ 26, 110]],
       [[ 27, 111]],
       [[ 27, 112]],
       [[ 28, 113]],
       [[ 28, 114]],
       [[ 29, 115]],
       [[ 29, 116]],
       [[ 30, 117]],
       [[ 30, 119]],
       [[ 31, 120]],
       [[ 31, 123]],
       [[ 32, 124]],
       [[ 32, 128]],
       [[ 33, 129]],
       [[ 33, 138]],
       [[ 34, 139]],
       [[ 34, 141]],
       [[ 35, 142]],
       [[ 35, 143]],
       [[ 38, 146]],
       [[ 40, 146]],
       [[ 41, 147]],
       [[ 44, 147]],
       [[ 45, 148]],
       [[ 47, 148]],
       [[ 48, 147]],
       [[ 49, 147]],
       [[ 50, 146]],
       [[ 50, 145]],
       [[ 52, 143]],
       [[ 52, 142]],
       [[ 54, 140]],
       [[ 54, 139]],
       [[ 57, 136]],
       [[ 57, 135]],
       [[ 59, 133]],
       [[ 59, 132]],
       [[ 61, 130]],
       [[ 61, 129]],
       [[ 62, 128]],
       [[ 60, 126]],
       [[ 60, 125]],
       [[ 59, 125]],
       [[ 50, 116]],
       [[ 50, 115]],
       [[ 48, 113]],
       [[ 48, 112]],
       [[ 46, 110]],
       [[ 46, 109]],
       [[ 44, 107]],
       [[ 44, 106]],
       [[ 43, 105]],
       [[ 43, 104]],
       [[ 42, 103]],
       [[ 42, 102]],
       [[ 41, 101]],
       [[ 41, 100]],
       [[ 40,  99]],
       [[ 40,  98]],
       [[ 39,  97]],
       [[ 39,  96]],
       [[ 38,  95]],
       [[ 38,  93]],
       [[ 37,  92]],
       [[ 37,  91]],
       [[ 36,  90]],
       [[ 36,  89]],
       [[ 35,  88]],
       [[ 35,  86]],
       [[ 34,  85]],
       [[ 34,  83]],
       [[ 33,  82]],
       [[ 33,  80]],
       [[ 32,  79]],
       [[ 32,  70]],
       [[ 31,  69]],
       [[ 31,  66]],
       [[ 30,  65]],
       [[ 30,  63]],
       [[ 22,  55]],
       [[ 20,  55]],
       [[ 19,  54]]],
       dtype=np.int32
    ) 

  def test_empty_contour(self):
    phalanx = ExpectedContourMetacarpal(1)
    phalanx.prepare([], 66, 151)
    shape_score = phalanx.shape_restrictions()
    assert shape_score == float('inf')

  def test_ideal_shape_accepted(self, metacarpal_contour):
    phalanx = ExpectedContourMetacarpal(1)
    phalanx.prepare(metacarpal_contour, 66, 151)
    shape_score = phalanx.shape_restrictions()
    assert shape_score != float('inf')

  def test_shape_under_80_area(self):
    under_80_metacarpal = np.array(
      [[[ 4,  0]],
       [[ 3,  1]],
       [[ 2,  1]],
       [[ 0,  3]],
       [[ 0,  5]],
       [[ 1,  6]],
       [[ 1,  7]],
       [[ 2,  8]],
       [[ 1,  9]],
       [[ 1, 12]],
       [[ 0, 13]],
       [[ 0, 14]],
       [[ 1, 14]],
       [[ 2, 15]],
       [[ 5, 15]],
       [[ 7, 13]],
       [[ 7, 11]],
       [[ 6, 10]],
       [[ 6,  9]],
       [[ 5,  8]],
       [[ 6,  7]],
       [[ 6,  5]],
       [[ 7,  4]],
       [[ 7,  2]],
       [[ 6,  1]],
       [[ 5,  1]]],
      dtype=np.int32
    )
    phalanx = ExpectedContourMetacarpal(1)
    phalanx.prepare(under_80_metacarpal, 40, 100)
    shape_score = phalanx.shape_restrictions()
    assert shape_score == float('inf')

  def test_bad_aspect_ratio(self):
    bad_aspect_ratio = np.array(
      [[[ 29,  75]],
      [[ 28,  76]],
      [[ 24,  76]],
      [[ 23,  77]],
      [[ 21,  77]],
      [[ 20,  78]],
      [[ 19,  78]],
      [[ 18,  79]],
      [[ 17,  79]],
      [[ 15,  81]],
      [[ 15,  82]],
      [[ 14,  83]],
      [[ 14,  84]],
      [[ 15,  85]],
      [[ 15,  89]],
      [[ 14,  90]],
      [[ 14,  93]],
      [[ 19,  98]],
      [[ 20,  98]],
      [[ 21,  99]],
      [[ 21, 100]],
      [[ 22, 101]],
      [[ 22, 102]],
      [[ 23, 103]],
      [[ 23, 104]],
      [[ 24, 105]],
      [[ 24, 106]],
      [[ 25, 107]],
      [[ 25, 108]],
      [[ 26, 109]],
      [[ 26, 110]],
      [[ 27, 111]],
      [[ 27, 112]],
      [[ 28, 113]],
      [[ 28, 114]],
      [[ 29, 115]],
      [[ 29, 116]],
      [[ 30, 117]],
      [[ 30, 119]],
      [[ 31, 120]],
      [[ 31, 123]],
      [[ 32, 124]],
      [[ 32, 128]],
      [[ 33, 129]],
      [[ 33, 138]],
      [[ 34, 139]],
      [[ 34, 141]],
      [[ 35, 142]],
      [[ 35, 143]],
      [[ 38, 146]],
      [[ 40, 146]],
      [[ 41, 147]],
      [[ 44, 147]],
      [[ 45, 148]],
      [[ 47, 148]],
      [[ 48, 147]],
      [[ 49, 147]],
      [[ 50, 146]],
      [[ 50, 145]],
      [[ 52, 143]],
      [[ 52, 142]],
      [[ 54, 140]],
      [[ 54, 139]],
      [[ 57, 136]],
      [[ 57, 135]],
      [[ 59, 133]],
      [[ 59, 132]],
      [[ 61, 130]],
      [[ 61, 129]],
      [[ 62, 128]],
      [[ 60, 126]],
      [[ 60, 125]],
      [[ 59, 125]],
      [[ 50, 116]],
      [[ 50, 115]],
      [[ 48, 113]],
      [[ 48, 112]],
      [[ 46, 110]],
      [[ 46, 107]],
      [[ 45, 106]],
      [[ 45, 101]],
      [[ 44, 100]],
      [[ 44,  91]],
      [[ 43,  90]],
      [[ 43,  87]],
      [[ 42,  86]],
      [[ 42,  84]],
      [[ 34,  76]],
      [[ 32,  76]],
      [[ 31,  75]]],
      dtype=np.int32
    )
    phalanx = ExpectedContourMetacarpal(1)
    phalanx.prepare(bad_aspect_ratio, 66, 151)
    shape_score = phalanx.shape_restrictions()
    assert shape_score == float('inf')

  def test_second_occurence_aspect_ratio_tolerance_fault(
    self,
    metacarpal_contour
  ):
    distal_1 = ExpectedContourMetacarpal(1)
    distal_1.prepare(metacarpal_contour, 66, 151)
    distal_2 = ExpectedContourMetacarpal(2, distal_1)
    larger_aspect_contour = np.array(
      [[[ 24,  30]],
       [[ 23,  31]],
       [[ 19,  31]],
       [[ 18,  32]],
       [[ 16,  32]],
       [[ 15,  33]],
       [[ 14,  33]],
       [[ 13,  34]],
       [[ 12,  34]],
       [[ 10,  36]],
       [[ 10,  37]],
       [[  9,  38]],
       [[  9,  39]],
       [[ 10,  40]],
       [[ 10,  44]],
       [[  9,  45]],
       [[  9,  48]],
       [[ 13,  52]],
       [[ 13,  53]],
       [[ 16,  56]],
       [[ 16,  57]],
       [[ 20,  61]],
       [[ 20,  62]],
       [[ 23,  65]],
       [[ 23,  66]],
       [[ 24,  67]],
       [[ 24,  68]],
       [[ 26,  70]],
       [[ 26,  71]],
       [[ 29,  74]],
       [[ 29,  75]],
       [[ 31,  77]],
       [[ 31,  78]],
       [[ 33,  80]],
       [[ 33,  81]],
       [[ 35,  83]],
       [[ 35,  84]],
       [[ 38,  87]],
       [[ 38,  88]],
       [[ 40,  90]],
       [[ 40,  91]],
       [[ 41,  92]],
       [[ 41,  93]],
       [[ 42,  94]],
       [[ 42,  95]],
       [[ 43,  96]],
       [[ 43,  97]],
       [[ 45,  99]],
       [[ 45, 100]],
       [[ 46, 101]],
       [[ 46, 102]],
       [[ 47, 103]],
       [[ 47, 104]],
       [[ 48, 105]],
       [[ 48, 106]],
       [[ 49, 107]],
       [[ 49, 108]],
       [[ 50, 109]],
       [[ 50, 110]],
       [[ 51, 111]],
       [[ 51, 112]],
       [[ 52, 113]],
       [[ 52, 114]],
       [[ 53, 115]],
       [[ 53, 116]],
       [[ 54, 117]],
       [[ 54, 119]],
       [[ 55, 120]],
       [[ 55, 123]],
       [[ 56, 124]],
       [[ 56, 128]],
       [[ 57, 129]],
       [[ 57, 138]],
       [[ 58, 139]],
       [[ 58, 141]],
       [[ 59, 142]],
       [[ 59, 143]],
       [[ 62, 146]],
       [[ 64, 146]],
       [[ 65, 147]],
       [[ 68, 147]],
       [[ 69, 148]],
       [[ 71, 148]],
       [[ 72, 147]],
       [[ 73, 147]],
       [[ 74, 146]],
       [[ 74, 145]],
       [[ 76, 143]],
       [[ 76, 142]],
       [[ 78, 140]],
       [[ 78, 139]],
       [[ 81, 136]],
       [[ 81, 135]],
       [[ 83, 133]],
       [[ 83, 132]],
       [[ 85, 130]],
       [[ 85, 129]],
       [[ 86, 128]],
       [[ 84, 126]],
       [[ 84, 125]],
       [[ 83, 125]],
       [[ 74, 116]],
       [[ 74, 115]],
       [[ 72, 113]],
       [[ 72, 112]],
       [[ 70, 110]],
       [[ 70, 109]],
       [[ 68, 107]],
       [[ 68, 106]],
       [[ 67, 105]],
       [[ 67, 104]],
       [[ 66, 103]],
       [[ 66, 102]],
       [[ 65, 101]],
       [[ 65, 100]],
       [[ 64,  99]],
       [[ 64,  98]],
       [[ 63,  97]],
       [[ 63,  96]],
       [[ 62,  95]],
       [[ 62,  93]],
       [[ 61,  92]],
       [[ 61,  91]],
       [[ 60,  90]],
       [[ 60,  89]],
       [[ 59,  88]],
       [[ 59,  86]],
       [[ 58,  85]],
       [[ 58,  83]],
       [[ 57,  82]],
       [[ 58,  81]],
       [[ 56,  79]],
       [[ 56,  78]],
       [[ 53,  75]],
       [[ 53,  74]],
       [[ 50,  71]],
       [[ 50,  70]],
       [[ 46,  66]],
       [[ 46,  65]],
       [[ 43,  62]],
       [[ 43,  61]],
       [[ 40,  58]],
       [[ 40,  56]],
       [[ 39,  55]],
       [[ 39,  46]],
       [[ 38,  45]],
       [[ 38,  42]],
       [[ 37,  41]],
       [[ 37,  39]],
       [[ 29,  31]],
       [[ 27,  31]],
       [[ 26,  30]]],
      dtype=np.int32
    )
    distal_2.prepare(larger_aspect_contour, 86, 140)
    score = distal_2.shape_restrictions()
    assert score == float('inf')

  def test_solidity_too_high(self):
    high_solidity = np.array(
      [[[ 33,  56]],
       [[ 32,  57]],
       [[ 31,  57]],
       [[ 30,  58]],
       [[ 29,  58]],
       [[ 27,  60]],
       [[ 27,  61]],
       [[ 26,  62]],
       [[ 26,  63]],
       [[ 27,  64]],
       [[ 27,  68]],
       [[ 26,  69]],
       [[ 26,  72]],
       [[ 30,  76]],
       [[ 30,  77]],
       [[ 33,  80]],
       [[ 33,  81]],
       [[ 35,  83]],
       [[ 35,  84]],
       [[ 38,  87]],
       [[ 38,  88]],
       [[ 40,  90]],
       [[ 40,  91]],
       [[ 41,  92]],
       [[ 41,  93]],
       [[ 42,  94]],
       [[ 42,  95]],
       [[ 43,  96]],
       [[ 43,  97]],
       [[ 45,  99]],
       [[ 45, 100]],
       [[ 46, 101]],
       [[ 46, 102]],
       [[ 47, 103]],
       [[ 47, 104]],
       [[ 48, 105]],
       [[ 48, 106]],
       [[ 49, 107]],
       [[ 49, 108]],
       [[ 50, 109]],
       [[ 50, 110]],
       [[ 51, 111]],
       [[ 51, 112]],
       [[ 52, 113]],
       [[ 52, 114]],
       [[ 53, 115]],
       [[ 53, 116]],
       [[ 54, 117]],
       [[ 54, 119]],
       [[ 55, 120]],
       [[ 55, 123]],
       [[ 56, 124]],
       [[ 56, 128]],
       [[ 57, 129]],
       [[ 57, 138]],
       [[ 58, 139]],
       [[ 58, 141]],
       [[ 59, 142]],
       [[ 59, 143]],
       [[ 62, 146]],
       [[ 64, 146]],
       [[ 65, 147]],
       [[ 68, 147]],
       [[ 69, 148]],
       [[ 71, 148]],
       [[ 72, 147]],
       [[ 73, 147]],
       [[ 74, 146]],
       [[ 74, 145]],
       [[ 76, 143]],
       [[ 76, 142]],
       [[ 78, 140]],
       [[ 78, 139]],
       [[ 81, 136]],
       [[ 81, 135]],
       [[ 83, 133]],
       [[ 83, 132]],
       [[ 85, 130]],
       [[ 85, 129]],
       [[ 86, 128]],
       [[ 84, 126]],
       [[ 84, 125]],
       [[ 83, 125]],
       [[ 74, 116]],
       [[ 74, 115]],
       [[ 72, 113]],
       [[ 72, 112]],
       [[ 70, 110]],
       [[ 70, 109]],
       [[ 68, 107]],
       [[ 68, 106]],
       [[ 67, 105]],
       [[ 67, 104]],
       [[ 66, 103]],
       [[ 66, 102]],
       [[ 65, 101]],
       [[ 65, 100]],
       [[ 64,  99]],
       [[ 64,  98]],
       [[ 63,  97]],
       [[ 63,  96]],
       [[ 62,  95]],
       [[ 62,  93]],
       [[ 61,  92]],
       [[ 61,  91]],
       [[ 60,  90]],
       [[ 60,  89]],
       [[ 59,  88]],
       [[ 58,  88]],
       [[ 56,  86]],
       [[ 55,  86]],
       [[ 54,  85]],
       [[ 53,  85]],
       [[ 51,  83]],
       [[ 50,  83]],
       [[ 48,  81]],
       [[ 47,  81]],
       [[ 45,  79]],
       [[ 45,  78]],
       [[ 44,  77]],
       [[ 44,  76]],
       [[ 43,  75]],
       [[ 43,  74]],
       [[ 42,  73]],
       [[ 42,  72]],
       [[ 41,  71]],
       [[ 41,  70]],
       [[ 40,  69]],
       [[ 40,  68]],
       [[ 38,  66]],
       [[ 38,  65]],
       [[ 37,  64]],
       [[ 37,  63]],
       [[ 36,  62]],
       [[ 36,  61]],
       [[ 35,  60]],
       [[ 35,  59]],
       [[ 34,  58]],
       [[ 34,  57]]],
      dtype=np.int32
    )
    phalanx = ExpectedContourMetacarpal(1)
    phalanx.prepare(high_solidity, 60, 140)
    shape_value = phalanx.shape_restrictions()
    assert shape_value == float('inf')

  def test_too_many_convexity_defects(self):
    over_convex_defects = np.array(
      [[[ 41,  54]],
       [[ 40,  55]],
       [[ 36,  55]],
       [[ 35,  56]],
       [[ 33,  56]],
       [[ 32,  57]],
       [[ 31,  57]],
       [[ 30,  58]],
       [[ 29,  58]],
       [[ 27,  60]],
       [[ 27,  61]],
       [[ 26,  62]],
       [[ 26,  63]],
       [[ 27,  64]],
       [[ 27,  68]],
       [[ 26,  69]],
       [[ 26,  72]],
       [[ 29,  75]],
       [[ 37,  75]],
       [[ 38,  76]],
       [[ 46,  76]],
       [[ 47,  77]],
       [[ 46,  78]],
       [[ 46,  79]],
       [[ 45,  80]],
       [[ 45,  82]],
       [[ 44,  83]],
       [[ 44,  84]],
       [[ 43,  85]],
       [[ 43,  87]],
       [[ 42,  88]],
       [[ 42,  89]],
       [[ 40,  91]],
       [[ 40,  92]],
       [[ 39,  93]],
       [[ 39,  94]],
       [[ 37,  96]],
       [[ 37,  97]],
       [[ 36,  98]],
       [[ 36,  99]],
       [[ 35, 100]],
       [[ 36, 101]],
       [[ 36, 102]],
       [[ 37, 103]],
       [[ 37, 104]],
       [[ 39, 106]],
       [[ 39, 107]],
       [[ 41, 109]],
       [[ 41, 110]],
       [[ 42, 111]],
       [[ 42, 112]],
       [[ 43, 113]],
       [[ 52, 113]],
       [[ 53, 112]],
       [[ 62, 112]],
       [[ 63, 113]],
       [[ 62, 114]],
       [[ 62, 116]],
       [[ 61, 117]],
       [[ 61, 119]],
       [[ 60, 120]],
       [[ 60, 123]],
       [[ 59, 124]],
       [[ 59, 126]],
       [[ 58, 127]],
       [[ 58, 129]],
       [[ 57, 130]],
       [[ 57, 138]],
       [[ 58, 139]],
       [[ 58, 141]],
       [[ 59, 142]],
       [[ 59, 143]],
       [[ 62, 146]],
       [[ 64, 146]],
       [[ 65, 147]],
       [[ 68, 147]],
       [[ 69, 148]],
       [[ 71, 148]],
       [[ 72, 147]],
       [[ 73, 147]],
       [[ 74, 146]],
       [[ 74, 145]],
       [[ 76, 143]],
       [[ 76, 142]],
       [[ 78, 140]],
       [[ 78, 139]],
       [[ 81, 136]],
       [[ 81, 135]],
       [[ 83, 133]],
       [[ 83, 132]],
       [[ 85, 130]],
       [[ 85, 129]],
       [[ 86, 128]],
       [[ 84, 126]],
       [[ 84, 125]],
       [[ 83, 125]],
       [[ 74, 116]],
       [[ 74, 115]],
       [[ 72, 113]],
       [[ 72, 112]],
       [[ 70, 110]],
       [[ 70, 109]],
       [[ 68, 107]],
       [[ 68, 106]],
       [[ 67, 105]],
       [[ 67, 104]],
       [[ 66, 103]],
       [[ 66, 102]],
       [[ 65, 101]],
       [[ 64, 101]],
       [[ 63, 100]],
       [[ 62, 100]],
       [[ 61,  99]],
       [[ 60,  99]],
       [[ 59,  98]],
       [[ 57,  98]],
       [[ 56,  97]],
       [[ 55,  97]],
       [[ 54,  96]],
       [[ 53,  96]],
       [[ 51,  94]],
       [[ 52,  93]],
       [[ 52,  92]],
       [[ 53,  91]],
       [[ 53,  89]],
       [[ 54,  88]],
       [[ 54,  87]],
       [[ 55,  86]],
       [[ 55,  84]],
       [[ 56,  83]],
       [[ 56,  82]],
       [[ 57,  81]],
       [[ 57,  80]],
       [[ 56,  79]],
       [[ 56,  70]],
       [[ 55,  69]],
       [[ 55,  66]],
       [[ 54,  65]],
       [[ 54,  63]],
       [[ 46,  55]],
       [[ 44,  55]],
       [[ 43,  54]]],
      dtype=np.int32
    )
    phalanx = ExpectedContourMetacarpal(1)
    phalanx.prepare(over_convex_defects, 60, 140)
    shape_value = phalanx.shape_restrictions()
    assert shape_value == float('inf')

  def test_too_few_convexity_defects(self):
    under_convex_defects = np.array(
      [[[ 41,  54]],
       [[ 40,  55]],
       [[ 36,  55]],
       [[ 35,  56]],
       [[ 33,  56]],
       [[ 32,  57]],
       [[ 31,  57]],
       [[ 30,  58]],
       [[ 29,  58]],
       [[ 27,  60]],
       [[ 27,  61]],
       [[ 26,  62]],
       [[ 26,  63]],
       [[ 27,  64]],
       [[ 27,  68]],
       [[ 26,  69]],
       [[ 26,  72]],
       [[ 30,  76]],
       [[ 30,  77]],
       [[ 32,  79]],
       [[ 32,  80]],
       [[ 33,  81]],
       [[ 33,  82]],
       [[ 34,  83]],
       [[ 34,  84]],
       [[ 35,  85]],
       [[ 35,  86]],
       [[ 36,  87]],
       [[ 36,  88]],
       [[ 37,  89]],
       [[ 37,  90]],
       [[ 38,  91]],
       [[ 38,  92]],
       [[ 39,  93]],
       [[ 39,  94]],
       [[ 40,  95]],
       [[ 40,  96]],
       [[ 41,  97]],
       [[ 41,  98]],
       [[ 42,  99]],
       [[ 42, 100]],
       [[ 43, 101]],
       [[ 43, 102]],
       [[ 44, 103]],
       [[ 44, 104]],
       [[ 45, 105]],
       [[ 45, 106]],
       [[ 46, 107]],
       [[ 46, 108]],
       [[ 47, 109]],
       [[ 47, 110]],
       [[ 48, 111]],
       [[ 48, 112]],
       [[ 49, 113]],
       [[ 49, 114]],
       [[ 50, 115]],
       [[ 50, 116]],
       [[ 51, 117]],
       [[ 51, 118]],
       [[ 52, 119]],
       [[ 52, 120]],
       [[ 53, 121]],
       [[ 53, 122]],
       [[ 54, 123]],
       [[ 54, 124]],
       [[ 55, 125]],
       [[ 55, 126]],
       [[ 56, 127]],
       [[ 56, 128]],
       [[ 57, 129]],
       [[ 57, 138]],
       [[ 58, 139]],
       [[ 58, 141]],
       [[ 59, 142]],
       [[ 59, 143]],
       [[ 62, 146]],
       [[ 64, 146]],
       [[ 65, 147]],
       [[ 68, 147]],
       [[ 69, 148]],
       [[ 71, 148]],
       [[ 72, 147]],
       [[ 73, 147]],
       [[ 74, 146]],
       [[ 74, 145]],
       [[ 76, 143]],
       [[ 76, 142]],
       [[ 78, 140]],
       [[ 78, 139]],
       [[ 81, 136]],
       [[ 81, 135]],
       [[ 83, 133]],
       [[ 83, 132]],
       [[ 85, 130]],
       [[ 85, 129]],
       [[ 86, 128]],
       [[ 84, 126]],
       [[ 84, 125]],
       [[ 83, 125]],
       [[ 78, 120]],
       [[ 78, 119]],
       [[ 77, 118]],
       [[ 77, 117]],
       [[ 76, 116]],
       [[ 76, 115]],
       [[ 75, 114]],
       [[ 75, 113]],
       [[ 74, 112]],
       [[ 74, 111]],
       [[ 73, 110]],
       [[ 73, 109]],
       [[ 72, 108]],
       [[ 72, 107]],
       [[ 71, 106]],
       [[ 71, 105]],
       [[ 70, 104]],
       [[ 70, 103]],
       [[ 69, 102]],
       [[ 69, 101]],
       [[ 68, 100]],
       [[ 68,  99]],
       [[ 67,  98]],
       [[ 67,  97]],
       [[ 66,  96]],
       [[ 66,  95]],
       [[ 65,  94]],
       [[ 65,  93]],
       [[ 64,  92]],
       [[ 64,  91]],
       [[ 63,  90]],
       [[ 63,  89]],
       [[ 62,  88]],
       [[ 62,  87]],
       [[ 61,  86]],
       [[ 61,  85]],
       [[ 60,  84]],
       [[ 60,  83]],
       [[ 59,  82]],
       [[ 59,  81]],
       [[ 58,  80]],
       [[ 58,  79]],
       [[ 57,  78]],
       [[ 57,  77]],
       [[ 56,  76]],
       [[ 56,  70]],
       [[ 55,  69]],
       [[ 55,  66]],
       [[ 54,  65]],
       [[ 54,  63]],
       [[ 46,  55]],
       [[ 44,  55]],
       [[ 43,  54]]],
      dtype=np.int32
    )
    phalanx = ExpectedContourMetacarpal(1)
    phalanx.prepare(under_convex_defects, 60, 140)
    shape_value = phalanx.shape_restrictions()
    assert shape_value == float('inf')

  def test_self_interception_contour_is_discarded(self):
    self_intercepting_contour = np.array(
      [[25, 66],
      [24, 67],
      [21, 67],
      [32, 68],
      [32, 82],
      [22, 84],
      [22, 87],
      [21, 88],
      [21, 89],
      [20, 91],
      [19, 92],
      [19, 96],
      [20, 97],
      [31, 97],
      [32, 82],
      [32, 68],
      [31, 67],
      [28, 67],
      [27, 66]],
      dtype=np.int32
    )

    phalanx = ExpectedContourMetacarpal(1)
    phalanx.prepare(self_intercepting_contour, 32, 97)
    score = phalanx.shape_restrictions()
    assert score == float('inf')
